-- ** Question 1 : Étudier les faits en fonction du jour de la semaine.
SELECT D.jDS, COUNT(*) AS numberOfCalls, sum(C.duration) AS durationOfCalls, ROUND(AVG(C.duration), 2) AS averageOfCalls
FROM fobs_dw_calls C, fobs_dw_date D
WHERE C.fkCallDate=D.dateCall
GROUP BY D.jDS
ORDER BY numberOfCalls desc;


-- ** Question 2 : Étudier les faits en fonction du jour de l'année.        
SELECT * FROM(
  SELECT D.jDA, COUNT(*) AS numberOfCalls, sum(C.duration) AS durationOfCalls, ROUND(AVG(C.duration), 2) AS averageOfCalls
  FROM fobs_dw_calls C, fobs_dw_date D
  WHERE C.fkCallDate=D.dateCall
  GROUP BY D.jDA
  ORDER BY numberOfCalls desc
)WHERE rownum BETWEEN 0 AND 10;


-- ** Question 3 : Étudier les faits en fonction de la semaine de l'année.
SELECT * FROM(
  SELECT D.semaine, COUNT(*) AS numberOfCalls, sum(C.duration) AS durationOfCalls, ROUND(AVG(C.duration), 2) AS averageOfCalls
  FROM fobs_dw_calls C, fobs_dw_date D
  WHERE C.fkCallDate=D.dateCall
  GROUP BY D.semaine
  ORDER BY numberOfCalls desc
)WHERE rownum BETWEEN 0 AND 10;


-- ** Question 4 : Étudier les faits en fonction du mois de l'année.
SELECT * FROM(
  SELECT D.mois, COUNT(*) AS numberOfCalls, sum(C.duration) AS durationOfCalls, ROUND(AVG(C.duration), 2) AS averageOfCalls
  FROM fobs_dw_calls C, fobs_dw_date D
  WHERE C.fkCallDate=D.dateCall
  GROUP BY D.mois
  ORDER BY numberOfCalls desc
)WHERE rownum BETWEEN 0 AND 10;


-- ** Question 5 : Analyser les faits en fonction des villes
SELECT * FROM(
  SELECT V.codeCommune, V.villeNomSimple, COUNT(*) AS numberOfCalls, sum(C.duration) AS durationOfCalls, ROUND(AVG(C.duration), 2) AS averageOfCalls
  FROM fobs_dw_calls C, fobs_dw_ville V
  WHERE C.fkCity=V.codeCommune
  GROUP BY V.codeCommune, V.villeNomSimple
  ORDER BY numberOfCalls desc
)WHERE rownum BETWEEN 0 AND 10;


-- ** Question 6 : Analyser les faits en fonction des revenus du client
-- Faire une analyse en proportion
SELECT * FROM(
  SELECT A.income, COUNT(*) AS numberOfCalls, sum(C.duration) AS durationOfCalls, ROUND(AVG(C.duration), 2) AS averageOfCalls
  FROM fobs_dw_calls C, fobs_dw_appelant A
  WHERE C.fkCustomerNumber=A.customerNumber
  GROUP BY A.income
  ORDER BY numberOfCalls desc
)WHERE rownum BETWEEN 0 AND 10;


-- ** Question 7 : Analyser les faits par rapport à l'age des clients
-- Faire une analyse en proportion
SELECT * FROM(
  SELECT A.age, COUNT(*) AS numberOfCalls, sum(C.duration) AS durationOfCalls, ROUND(AVG(C.duration), 2) AS averageOfCalls
  FROM fobs_dw_calls C, fobs_dw_appelant A
  WHERE C.fkCustomerNumber=A.customerNumber
  GROUP BY A.age
  ORDER BY numberOfCalls desc
)WHERE rownum BETWEEN 0 AND 10;


-- ** Question 8 : Analyser les faits en fonction du genre du client
-- Faire une analyse en proportion
SELECT * FROM(
  SELECT A.gender, COUNT(*) AS numberOfCalls, sum(C.duration) AS durationOfCalls, ROUND(AVG(C.duration), 2) AS averageOfCalls
  FROM fobs_dw_calls C, fobs_dw_appelant A
  WHERE C.fkCustomerNumber=A.customerNumber
  GROUP BY A.gender
  ORDER BY numberOfCalls desc
)WHERE rownum BETWEEN 0 AND 10;


SELECT R.dayOfWeek, AVG(R.quantity) AS q
FROM
(
  SELECT D.dateTicket, D.jDS AS dayOfWeek, COUNT(*) AS quantity 
  FROM f_dw_ventes V, f_dw_date D
  WHERE V.fkDate = D.dateTicket
  GROUP BY D.dateTicket, D.jDS
) R
GROUP BY R.dayOfWeek
HAVING R.dayOfWeek != 6
ORDER BY q DESC;


CREATE VIEW VentesFonctionJour
AS
SELECT D.jDS, COUNT(*) AS q
FROM f_dw_ventes V, f_dw_date D
WHERE V.fkDate=D.dateTicket
GROUP BY D.jDS
ORDER BY q desc;

SELECT * FROM VentesFonctionJour;

CREATE VIEW MoyenneVentesFonctionJour
AS
SELECT R.dayOfWeek, AVG(R.quantity) AS q
FROM
(
  SELECT D.dateTicket, D.jDS AS dayOfWeek, COUNT(*) AS quantity 
  FROM f_dw_ventes V, f_dw_date D
  WHERE V.fkDate = D.dateTicket
  GROUP BY D.dateTicket, D.jDS
) R
GROUP BY R.dayOfWeek
HAVING R.dayOfWeek != 6
ORDER BY q DESC;

CREATE VIEW MoyenneVentes(moy) AS
SELECT AVG(q) 
FROM MoyenneVentesFonctionJour;

SELECT * FROM MoyenneVentes;


CREATE VIEW MoyenneVentesSamedi
AS
SELECT q FROM(
  SELECT R.dayOfWeek, AVG(R.quantity) AS q
  FROM
  (
    SELECT D.dateTicket, D.jDS AS dayOfWeek, COUNT(*) AS quantity 
    FROM f_dw_ventes V, f_dw_date D
    WHERE V.fkDate = D.dateTicket
    GROUP BY D.dateTicket, D.jDS
  ) R
  GROUP BY R.dayOfWeek
  HAVING R.dayOfWeek = 6
  ORDER BY q DESC
);

SELECT * FROM MoyenneVentesSamedi;

SELECT q/moy AS ratioSamediParRapportSemaine FROM(
  SELECT * 
  FROM MoyenneVentes,
  MoyenneVentesSamedi
);

SELECT M.rayonnage AS r1, COUNT(*) AS q1
FROM f_dw_ventes V, f_dw_magasin M
WHERE V.fkMagasin=M.magasin
GROUP BY M.rayonnage;

SELECT M.rayonnage AS r2, COUNT(*) AS q2
FROM f_dw_magasin M
GROUP BY M.rayonnage; 


SELECT r1 AS rayonnage, q1 AS Ventes, q2 AS Mag, ROUND(q1/q2) AS VentesParMag FROM
(
  SELECT M.rayonnage AS r1, COUNT(*) AS q1
  FROM f_dw_ventes V, f_dw_magasin M
  WHERE V.fkMagasin=M.magasin
  GROUP BY M.rayonnage 
),
(
  SELECT M.rayonnage AS r2, COUNT(*) AS q2
  FROM f_dw_magasin M
  GROUP BY M.rayonnage
)
WHERE r1=r2
ORDER BY VentesParMag DESC;


SELECT M.rayonBS AS r1, COUNT(*) AS q1
FROM f_dw_ventes V, f_dw_magasin M
WHERE V.fkMagasin=M.magasin
GROUP BY M.rayonBS;

SELECT M.rayonBS AS r2, COUNT(*) AS q2
FROM f_dw_magasin M
GROUP BY M.rayonBS; 

SELECT r1 AS rayonnage, q1 AS Ventes, q2 AS Mag, ROUND(q1/q2) AS VentesParMag FROM
(
  SELECT M.rayonBS AS r1, COUNT(*) AS q1
  FROM f_dw_ventes V, f_dw_magasin M
  WHERE V.fkMagasin=M.magasin
  GROUP BY M.rayonBS
),
(
  SELECT M.rayonBS AS r2, COUNT(*) AS q2
  FROM f_dw_magasin M
  GROUP BY M.rayonBS
)
WHERE r1=r2
ORDER BY VentesParMag DESC;


SELECT M.rayonBS AS r1, COUNT(*) AS q1
FROM f_dw_ventes V, f_dw_magasin M
WHERE V.fkMagasin=M.magasin AND M.rayonnage = 'A'
GROUP BY M.rayonBS;

SELECT M.rayonBS AS r2, COUNT(*) AS q2
FROM f_dw_magasin M
WHERE M.rayonnage = 'A'
GROUP BY M.rayonBS; 

SELECT r1 AS rayonnage, q1 AS Ventes, q2 AS Mag, ROUND(q1/q2) AS VentesParMagA FROM
(
  SELECT M.rayonBS AS r1, COUNT(*) AS q1
  FROM f_dw_ventes V, f_dw_magasin M
  WHERE V.fkMagasin=M.magasin AND M.rayonnage = 'A'
  GROUP BY M.rayonBS
),
(
  SELECT M.rayonBS AS r2, COUNT(*) AS q2
  FROM f_dw_magasin M
  GROUP BY M.rayonBS
)
WHERE r1=r2
ORDER BY VentesParMagA DESC;


SELECT AVG(R.quantity) AS q
FROM
(
  SELECT P.iSBN, COUNT(*) AS quantity 
  FROM f_dw_ventes V, f_dw_produit P
  WHERE V.fkProduit = P.iSBN
  GROUP BY P.iSBN
) R;
