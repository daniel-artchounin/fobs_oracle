-- ** Question 1 : Étudier les faits en fonction du jour de la semaine.
SELECT D.jDS, COUNT(*) AS numberOfCalls, SUM(C.duration) AS totalDurationOfCalls, ROUND(AVG(C.duration), 2) AS averageDurationOfCall
FROM fobs_dw_calls C, fobs_dw_date D
WHERE C.fkCallDate=D.dateCall
GROUP BY D.jDS
ORDER BY numberOfCalls DESC;


-- ** Question 2 : Étudier les faits en fonction du jour de l'année.        
SELECT * FROM(
	SELECT D.jDA, COUNT(*) AS numberOfCalls, SUM(C.duration) AS totalDurationOfCalls, ROUND(AVG(C.duration), 2) AS averageDurationOfCall
	FROM fobs_dw_calls C, fobs_dw_date D
	WHERE C.fkCallDate=D.dateCall
	GROUP BY D.jDA
	ORDER BY numberOfCalls DESC
)WHERE rownum BETWEEN 0 AND 10;


-- ** Question 3 : Étudier les faits en fonction de la semaine de l'année.
SELECT * FROM(
	SELECT D.semaine, COUNT(*) AS numberOfCalls, SUM(C.duration) AS totalDurationOfCalls, ROUND(AVG(C.duration), 2) AS averageDurationOfCall
	FROM fobs_dw_calls C, fobs_dw_date D
	WHERE C.fkCallDate=D.dateCall
	GROUP BY D.semaine
	ORDER BY numberOfCalls DESC
)WHERE rownum BETWEEN 0 AND 10;


-- ** Question 4 : Étudier les faits en fonction du mois de l'année.
SELECT * FROM(
	SELECT D.mois, COUNT(*) AS numberOfCalls, SUM(C.duration) AS totalDurationOfCalls, ROUND(AVG(C.duration), 2) AS averageDurationOfCall
	FROM fobs_dw_calls C, fobs_dw_date D
	WHERE C.fkCallDate=D.dateCall
	GROUP BY D.mois
	ORDER BY numberOfCalls DESC
);


-- ** Question 5 : Analyser les faits en fonction des villes
SELECT * FROM(
	SELECT V.codeCommune, V.villeNomSimple, COUNT(*) AS numberOfCalls, SUM(C.duration) AS totalDurationOfCalls, ROUND(AVG(C.duration), 2) AS averageDurationOfCall
	FROM fobs_dw_calls C, fobs_dw_ville V
	WHERE C.fkCity=V.codeCommune
	GROUP BY V.codeCommune, V.villeNomSimple
	ORDER BY numberOfCalls DESC
)WHERE rownum BETWEEN 0 AND 10;


-- ** Question 6 : Analyser les faits en fonction des revenus du client
-- Faire une analyse en proportion
SELECT R1.r1 AS income, ROUND(R1.q1 / R2.q2) AS aVGNumberOfCallsPerPerson, ROUND(R1.q1Prime / R2.q2) AS aVGDurationPerPerson, R1.q1PrimePrime AS aVGDurationOfCall FROM
(
	SELECT A.income AS r1, COUNT(*) AS q1, SUM(C.duration) AS q1Prime, ROUND(AVG(C.duration), 2) AS q1PrimePrime
	FROM fobs_dw_calls C, fobs_dw_appelant A
	WHERE C.fkCustomerNumber=A.customerNumber
	GROUP BY A.income
)R1, (
	SELECT A.income AS r2, COUNT(*) AS q2
	FROM fobs_dw_appelant A
	GROUP BY A.income
)R2
WHERE R1.r1=R2.r2 AND rownum BETWEEN 0 AND 10
ORDER BY aVGNumberOfCallsPerPerson DESC;


-- ** Question 7 : Analyser les faits par rapport à l'age des clients
-- Faire une analyse en proportion
SELECT R1.r1 AS age, ROUND(R1.q1 / R2.q2) AS aVGNumberOfCallsPerPerson, ROUND(R1.q1Prime / R2.q2) AS aVGDurationPerPerson, R1.q1PrimePrime AS aVGDurationOfCall FROM
(
	SELECT A.age AS r1, COUNT(*) AS q1, SUM(C.duration) AS q1Prime, ROUND(AVG(C.duration), 2) AS q1PrimePrime
	FROM fobs_dw_calls C, fobs_dw_appelant A
	WHERE C.fkCustomerNumber=A.customerNumber
	GROUP BY A.age
)R1, (
	SELECT A.age AS r2, COUNT(*) AS q2
	FROM fobs_dw_appelant A
	GROUP BY A.age
)R2
WHERE R1.r1=R2.r2 AND rownum BETWEEN 0 AND 10
ORDER BY aVGNumberOfCallsPerPerson DESC;


-- ** Question 8 : Analyser les faits en fonction du genre du client
-- Faire une analyse en proportion
SELECT R1.r1 AS gender, ROUND(R1.q1 / R2.q2) AS aVGNumberOfCallsPerPerson, ROUND(R1.q1Prime / R2.q2) AS aVGDurationPerPerson, R1.q1PrimePrime AS aVGDurationOfCall FROM
(
	SELECT A.gender AS r1, COUNT(*) AS q1, SUM(C.duration) AS q1Prime, ROUND(AVG(C.duration), 2) AS q1PrimePrime
	FROM fobs_dw_calls C, fobs_dw_appelant A
	WHERE C.fkCustomerNumber=A.customerNumber
	GROUP BY A.gender
)R1, (
	SELECT A.gender AS r2, COUNT(*) AS q2
	FROM fobs_dw_appelant A
	GROUP BY A.gender
)R2
WHERE R1.r1=R2.r2
ORDER BY aVGNumberOfCallsPerPerson DESC;